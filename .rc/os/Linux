# vim: set ft=sh: -*- mode: sh -*-
########################################################################
#
# ~/.rc/os/Linux
#
# This file is sourced from .rc/rc.
#
# Configuration specific to the Linux operating system should go in
# here.  It will only be sourced if uname(1) returns "Linux".
########################################################################

RC_FILENAME=".rc/os/Linux"
rc_log "starting up"

case "$-" in
    *i*)
        # Things that only need to be processed for an interactive shell.

        # Linux uses GNU less, which includes color support.
        alias ls='ls --color=auto'

        # set DIRCOLORS, if the "dircolors" command is available.
        if [ -x "$(command -v dircolors)" ]; then
            [[ -r "${HOME}/.dircolors" ]] && eval $(dircolors "${HOME}/.dircolors") || eval $(dircolors)
        fi

        # Linux uses GNU grep.  Set options such that color support is
        # enabled, binary files will be ignored, and files named "tags"
        # will not be searched.
        export GREP_OPTS="--colour=auto --binary-files=without-match --exclude=tags"
        for cmd in {,/usr}/bin/*grep; do
            cmd=$(basename $cmd)
            # pgrep(1) isn't the same kind of grep(1) command.
            [[ "$cmd" == "pgrep" ]] && continue
            alias $cmd="$cmd \$GREP_OPTS"
        done

        unset command_not_found_handle

        set_netmap_param()
        {
            if [[ -z $1 || -z $2 ]]; then
                echo "Not enough arguments" 2>&1
                return
            fi

            printf "Previous value: %s\n" $(</sys/module/netmap/parameters/$1)
            sudo sh -c "echo $2 > /sys/module/netmap/parameters/$1"
            printf "New value: %s\n" $(</sys/module/netmap/parameters/$1)
        }

        get_netmap_param()
        {
            if [[ -z $1 ]]; then
                echo "Not enough arguments" 2>&1
                return
            fi

            printf "%20s: %8s\n" $1 $(</sys/module/netmap/parameters/$v);
        }

        get_netmap_params()
        {
            for i in /sys/module/netmap/parameters/*;
            do
                v=$(basename $i);
                get_netmap_param $v
            done
        }
        ;;
esac

# Things that should always be available go after here.

rc_log "done."
