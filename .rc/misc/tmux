# vim: set ft=sh:
########################################################################
#
# Copyright (c) 2016 Seth Wright (seth@crosse.org)
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
########################################################################

# Only for interactive shells.
[[ "${-}" != *i* ]] && return

# And only if tmux is installed.
[[ -n "$(command -v tmux)" ]] || return

version=$(tmux -V)
version=${version##tmux }

case $version in
    [01].*)
        t() {
            local session
            session="${1:-main}"

            tmux start-server
            tmux has-session -t "$session"
            if [ $? -ne 0 ]; then
                echo "Creating new session $session"
                tmux new-session -s "$session"
            else
                echo "Attaching to existing session $session" 1>&2
                tmux attach-session -t "$session"
            fi
        }
        ;;
    *)
        t() { tmux new-session -A -t "${1:-main}"; }
        ;;
esac

_t() {
    local IFS=$'\n'
    local cur
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( ${COMPREPLY[@]:-} $(compgen -W "$(tmux -q list-sessions 2>/dev/null | cut -f 1 -d ':')" -- "${cur}") )
    return 0

}

complete -F _t t
