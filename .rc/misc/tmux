# vim: set ft=sh:

# Only for interactive shells.
[[ "${-}" != *i* ]] && return

# And only if tmux is installed.
[[ -n "$(command -v tmux)" ]] || return

version=$(tmux -V)
version=${version##tmux }

case $version in
    [01].*)
        t() {
            local session
            session="${1:-main}"

            tmux start-server
            tmux has-session -t "$session"
            if [ $? -ne 0 ]; then
                echo "Creating new session $session"
                tmux new-session -s "$session"
            else
                echo "Attaching to existing session $session" 1>&2
                tmux attach-session -t "$session"
            fi
        }
        ;;
    *)
        t() { tmux new-session -A -t "${1:-main}"; }
        ;;
esac

_t() {
    local IFS=$'\n'
    local cur
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( ${COMPREPLY[@]:-} $(compgen -W "$(tmux -q list-sessions 2>/dev/null | cut -f 1 -d ':')" -- "${cur}") )
    return 0

}

complete -F _t t

update_tmux_env() {
    [[ -n $TMUX ]] || return
    local v
    while read v; do
        if [[ $v == -* ]]; then
            unset ${v/#-/}
        else
            v=${v//$/\$}
            v=${v//\`/\`}
            v=${v//\"/\"}
            v=${v//\/\\}
            v=${v/=/=\"}
            v=${v/%/\"}
            eval export $v
        fi
    done < <(tmux show-environment)
}
[[ "$PROMPT_COMMAND" == *update_tmux_env* ]] || PROMPT_COMMAND="update_tmux_env; $PROMPT_COMMAND"
