# vim: set ft=sh: -*- mode: sh -*-

# Only for interactive shells.
[[ "${-}" != *i* ]] && return

# And only if tmux is installed.
[[ -n "$(command -v tmux)" ]] || return

version=$(tmux -V 2>/dev/null)
if [[ $? -ne 0 ]]; then
    # This is *probably* OpenBSD, since tmux is developed in-tree.
    # Versions of OpenBSD older than 6.1 (I think?) have version 1 of
    # tmux, but since none of them are officially supported now, let's
    # just hard-code the version to 2 and move on with life.
    version=2
fi

version=${version##tmux }

case $version in
    [01].*)
        t() {
            local session
            session="${1:-main}" ; shift

            tmux start-server
            tmux has-session -t "$session"
            if [ $? -ne 0 ]; then
                echo "Creating new session $session"
                tmux new-session -s "$session"
            else
                echo "Attaching to existing session $session" 1>&2
                tmux attach-session -t "$session" "$@"
            fi
        }
        ;;
    *)
        t() {
            local session
            if [[ -n $1 ]]; then 
                # ksh doesn't like a shift if there isn't anything to shift...
                session="${1}" ; shift
            else
                session="main"
            fi
            tmux new-session -A -s "$session" "$@"
        }
        ;;
esac

# bash-specific configuration follows; no reason to continue if we're not bash
[[ $SHELL == *bash* ]] || return

update_tmux_env() {
    [[ -n $TMUX ]] || return
    local v
    while read v; do
        if [[ $v == -* ]]; then
            unset ${v/#-/}
        else
            v=${v//$/\$}
            v=${v//\`/\`}
            v=${v//\"/\"}
            v=${v//\/\\}
            v=${v/=/=\"}
            v=${v/%/\"}
            eval export $v
        fi
    done < <(tmux show-environment)
}
[[ "$PROMPT_COMMAND" == *update_tmux_env* ]] || PROMPT_COMMAND="update_tmux_env; $PROMPT_COMMAND"

_t() {
    local IFS=$'\n'
    local cur
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( ${COMPREPLY[@]:-} $(compgen -W "$(tmux -q list-sessions 2>/dev/null | cut -f 1 -d ':')" -- "${cur}") )
    return 0

}

complete -F _t t
