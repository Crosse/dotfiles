# vim: set ft=sh:
########################################################################
#
# Copyright (c) 2016 Seth Wright (seth@crosse.org)
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
########################################################################

# Only for interactive shells.
[[ "${-}" != *i* ]] && return

# No need to do anything if Zenoss isn't installed.
# The 'zenoss' command will exist for Zenoss 4 and below, and
# 'serviced' will exist for Zenoss 5.
# (Technically checking for serviced only verifies that Control Center
# is installed, but for now that's good enough.)
if [[ -x $(command -v zenoss) ]]; then
    zre() {
        echo "==> Restarting Zope" 1>&2
        zopectl restart
        echo "==> Restarting ZenHub" 1>&2
        zenhub restart
        if [ "$1" = "full" ]; then
            echo "==> Restarting ZenModeler" 1>&2
            zenmodeler restart
            echo "==> Restarting ZenPerfSnmp" 1>&2
            zenperfsnmp restart
        fi
    }
    zlint() {
        if [ -z "$ZP" ]; then
            echo "ZP not set!" 1>&2
            return
        fi
        local zpdir yaml

        zpdir="${ZP}/$(basename "$ZP" | tr . /)"
        yaml="${zpdir}/zenpack.yaml"
        if [ ! -f "$yaml" ]; then
            echo "$yaml does not exist"
            return
        fi
        echo "==> Linting $yaml"
        ${zpdir}/zenpacklib.py lint "$yaml"
    }
    zli() {
        if [ -z "$ZP" ]; then
            echo "ZP not set!" 1>&2
            return
        fi
        echo "==> Installing (via link) $(basename $ZP)"
        zenpack --link --install "$ZP" && zre $@
    }
fi

if [[ -x $(command -v serviced) ]]; then
    # ZenPack development helpers.
    alias zope='serviced service attach zope su zenoss -l'
    alias zenhub='serviced service attach zenhub su zenoss -l'
    z () { serviced service attach zope su zenoss -l -c "cd /z;$*"; }
    zenbatchload () { z zenbatchload $*; }
    zendisc () { z zendisc $*; }
    zendmd () { z zendmd $*; }
    zenmib () { z zenmib $*; }
    zenmodeler () { z zenmodeler $*; }
    zenpack () { z zenpack $*; }
    zenpacklib () { z /z/zenpacklib.py $*; }
    zenpython () { z zenpython $*; }
fi
