# vim: set ft=sh:
########################################################################
#
# ~/.rc/rc_utils
#
########################################################################

# Functions required to bootstrap the rest of the rc process.
function rc_log {
    # Prints its arguments to standard error.
    # Usage:  log script_name "message ..."

    # Don't even attempt to log anything if the shell isn't interactive.
    [[ "${-}" != *i* ]] && return

    [[ -z "$RC_FILENAME" ]] && echo "RC_FILENAME not set!" 1>&2
    if [ -n "$RC_VERBOSE" ]; then
        printf "%${RC_INDENT}s%s\n" "" "$RC_FILENAME: $@" 1>&2
    fi
}

function rc_source_file {
    # All this does is source a file while making rc_log look pretty.
    if [ -r "$1" ]; then
        if [ -z "$RC_VERBOSE" ]; then
            # ...but honestly, 99% of the time WHO CARES ABOUT THE REST
            # OF THAT CRAP.
            . "$1"
        else
            typeset OLD_RC_FILENAME="$RC_FILENAME"
            rc_log "sourcing $1"
            typeset RC_INDENT=$(($RC_INDENT+4))
            if [ -n "$RC_TIMED" ]; then
                time . "$1"
            else
                . "$1"
            fi
            typeset RC_INDENT=$(($RC_INDENT-4))
            RC_FILENAME="$OLD_RC_FILENAME"
        fi
    fi
}

function remove_rc_from_env {
    unset rc_log rc_source_file
    unset RC_FILENAME RC_PATH RC_TIMED RC_VERBOSE
}
